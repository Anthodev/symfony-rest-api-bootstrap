name: CI

on:
  pull_request:

env:
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: $DB_USER
          POSTGRES_PASSWORD: $DB_PASSWORD
          POSTGRES_DB: $DB_NAME
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_pgsql, dom, filter, gd, iconv, json, mbstring, pdo
        env:
          update: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "composer-cache-dir=$(composer config cache-files-dir)" >> $GITHUB_ENV

      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: ${{ env.composer-cache-dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: "Composer install"
        run: composer install --no-interaction --no-progress

      - name: Static Analysis
        run: make stan

      - name: Lint Doctrine entities
        run: ./bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction

      - name: Generate JWT keys
        run: make generate-jwt

      - name: Tests
        run: make test-all
        env:
          DATABASE_URL: "postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME"
